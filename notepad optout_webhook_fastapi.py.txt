import os
import json
import gspread
from fastapi import FastAPI, Request
from oauth2client.service_account import ServiceAccountCredentials

# ================================
# üöÄ CONFIGURACI√ìN INICIAL
# ================================
app = FastAPI()

# Alcances requeridos para Google Sheets y Drive
scope = [
    "https://spreadsheets.google.com/feeds",
    "https://www.googleapis.com/auth/drive"
]

# ================================
# üîê CREDENCIALES GOOGLE (Render)
# ================================
creds_json = os.getenv("GOOGLE_CREDS_JSON")

if not creds_json:
    raise Exception("‚ùå GOOGLE_CREDS_JSON not found. Check your Render environment settings.")

try:
    creds_dict = json.loads(creds_json)
    creds = ServiceAccountCredentials.from_json_keyfile_dict(creds_dict, scope)
    client = gspread.authorize(creds)
    print("‚úÖ Google credentials loaded successfully.")
except Exception as e:
    raise Exception(f"‚ùå Error loading Google credentials: {e}")

# ================================
# ‚ù§Ô∏è HEALTH CHECK
# ================================
@app.get("/healthz")
async def health_check():
    """Render usa este endpoint para verificar que el servicio est√° vivo."""
    return {"status": "ok", "message": "Webhook is running"}

# ================================
# üì¨ WEBHOOK PRINCIPAL
# ================================
@app.post("/webhook")
async def webhook_endpoint(request: Request):
    try:
        data = await request.json()
        print(f"üì© Webhook received: {data}")

        # --- Ejemplo de escritura en Google Sheets ---
        # sheet = client.open("NombreDeTuHoja").worksheet("Sheet1")
        # sheet.append_row([data.get("email"), "Opt-out recibido"])

        return {"status": "success", "message": "Opt-out recibido correctamente"}

    except Exception as e:
        print(f"‚ùå Error procesando webhook: {e}")
        return {"status": "error", "message": str(e)}
